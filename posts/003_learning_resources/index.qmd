---
title: "GOATed resources for ML engineers: 1"
author: "Zeniro"
date: "2024-10-16"
categories: [software-engineering, learning-resources, data-science, ML]
comments:
  utterances:
    repo: zeniro-codes/blog
---

This is the first blog post in a series on the learning resources that helped me become an ML engineer without a CS background. Here and in the next posts, I will include only the materials I worked with and that helped me in my daily job as an ML engineer. No affiliate links, just the stuff that helped me the most in my ML engineering career.

1. [Deep Dive into Python](https://www.udemy.com/course/python-3-deep-dive-part-1) from Dr. Fred Baptiste. This series of courses takes roughly 100 hours to complete, but every second worths it. Your code quality will increase significantly, you will understand and appreciate Python on a whole different level. Some topics that were super helpful to me: memory, reference counting, and garbage collection in Python, Python data structures, and metaprogramming in Python. Dr. Fred also has an amazing [YouTube channel](https://www.youtube.com/@mathbyteacademy) on idiomatic Python, cool Python libraries, etc. If you finish these courses, there will not be a Python topic that you will not understand how to work with.
2. [Taking Python to Production: A Professional Onboarding Guide](https://www.udemy.com/course/setting-up-the-linux-terminal-for-software-development) from Eric Riddoch. Eric created the best course on how to set up a development environment for your work with Python. You'll learn how to make your terminal more intuitive with ZSH and plugins, version and package Python software, and set up automated code quality checks. But the best part of this course is that you will understand what is possible in setting up a development environment, and you can modify it easily. I use the knowledge from the course pretty much on a daily basis.
3. [Fundamentals of Network Engineering](https://www.udemy.com/course/fundamentals-of-networking-for-effective-backend-design) and [Fundamentals of Operating Systems](https://www.udemy.com/course/fundamentals-of-operating-systems) from Hussein Nasser. You'll gain an understanding of network protocols like TCP/IP, learn about the OSI model, and explore how operating systems manage processes and resources. The courses also cover practical skills like using Wireshark for traffic inspection and optimizing applications based on OS principles. This was an "unknown unknown" - something I didn't even know that I didn't know. Information from these courses helps me to build more scalable ML processes, and I come back to them quite often. Additionally, it might also help you better understand what ThePrimeagen talks about in his streams, so it's worth it just because of this fact.
4. [End-to-End Machine Learning: From Idea to Implementation](https://www.udemy.com/course/sustainable-and-scalable-machine-learning-project-development/) from Kıvanç Yüksel. This course covers the entire ML project lifecycle in a very thorough project. You'll learn about data versioning, distributed processing and model training, and the principles of MLOps. The course also covers experiment tracking, error analysis, and creating applications using trained models. It is one of the best demonstrations of the machine learning engineer job in comparison to the data scientist job to date. Highly recommend.